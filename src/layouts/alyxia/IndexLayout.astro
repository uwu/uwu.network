---
import BorderLayout from "@layouts/BorderLayout.astro";
import CrossCode from "#components/CrossCode.astro";

import loadtsuki from "#/img/loader/loadtsuki.png";
import loadspin from "#/img/loader/loadspin.png";

import "#css/reset.css";
import "#css/loader.css";
import "#css/common.css";
import "#css/scanlines.css";

const { titleName, bgm } = Astro.props;
---

<div id="contentloader">
	<img id="loadtsuki" src={loadtsuki} />
	<img id="loadspin" src={loadspin} />
</div>

<BorderLayout
	bodyClass="wrapper"
	title="~alyxia"
	titleName={titleName ?? "what?"}
	headerName="ALYXIA"
	mainHref="/~alyxia"
	scroll
>
	<main>
		<CrossCode>
			<slot />
		</CrossCode>
	</main>
</BorderLayout>

<script define:vars={{ bgm }}>
	window.bgm = bgm;
</script>

<script>
	import { Howl } from "howler";
	declare global {
		const bgm: any;
	}

	// Remove IBM Plex as the default document font.
	document.body.classList.remove("font-plex");
	document.querySelector(".border .p-6").classList.remove("p-6");

	// Set up the loader
	window.addEventListener("load", function (event) {
		document.getElementById("contentloader").className = "destroyedloader";
		(document.getElementById("loadspin") as HTMLImageElement).src =
			"/alyxia/img/loader/loadfinish.png";
	});
	window.onbeforeunload = function () {
		document
			.getElementById("contentloader")
			.classList.remove("destroyedloader");
		(document.getElementById("loadspin") as HTMLImageElement).src =
			"/alyxia/img/loader/loadspin.png";
	};

	if (bgm) {
		let audioContext;
		document.body.onclick = () => {
			if (!audioContext) audioContext = new AudioContext();
			audioContext.onstatechange = () => {
				if (
					audioContext.state !== "suspended" &&
					audioContext.state !== "closed"
				) {
					let sound = new Howl({
						src: `/alyxia/audio/${bgm.src ?? "ambience/2.ogg"}`,
						volume: bgm.vol ?? 1,
						loop: bgm.loop ?? false,
					});
					if (!sound.playing()) sound.play();
				}
			};
		};
	}
</script>
